# -*- coding: utf-8 -*-
"""TEST_FAKE_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11JRXfo_eXpiRhHk7LDPiO7R77eC0H54f
"""

import cv2
import os
import numpy as np
from skimage.metrics import structural_similarity as ssim

# Load and preprocess images
def preprocess_image(image_path):
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    if image is None:
        print(f"❌ Error: Unable to load image '{image_path}'")
        return None
    image = cv2.resize(image, (400, 200))  # Resize to standard size
    return image

# Compare two images using SSIM
def compare_images(image1, image2):
    score, diff = ssim(image1, image2, full=True)
    diff = (diff * 255).astype("uint8")
    return score, diff

# Determine if the PAN card is fake or valid
def determine_result(score):
    if score >= 0.85:
        return "Valid PAN Card", "✅ High similarity score and minimal structural differences."
    else:
        return "Fake PAN Card", "❌ Major structural differences detected. Possible fake document."

# Check if an image is tampered
def check_tampered_image(test_image_path, reference_image):
    test_image = preprocess_image(test_image_path)
    if test_image is None:
        return None, "Error loading image"

    score, _ = compare_images(reference_image, test_image)
    result, reason = determine_result(score)

    return score, result, reason

# Process a folder containing PAN card images
def process_pan_folder(folder_path, reference_image_path):
    if not os.path.exists(folder_path):
        print(f"❌ Error: Folder '{folder_path}' not found!")
        return

    reference_image = preprocess_image(reference_image_path)
    if reference_image is None:
        print("❌ Error: Could not load reference PAN card image.")
        return

    print(f"\n🔍 Processing images in folder: {folder_path}\n")

    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)

        if filename.lower().endswith((".jpg", ".jpeg", ".png")):  # Process only image files
            score, result, reason = check_tampered_image(file_path, reference_image)
            if score is not None:
                print(f"\n🖼 Image: {filename}\n📊 SSIM Score: {score:.4f}\n🔍 Result: {result}\n📌 Reason: {reason}\n--------------------------------------------------")

# Path to the folder containing PAN card images
test_folder = r"/content/drive/MyDrive/images-high-res"  # Change to your actual folder path
reference_image_path = "ori.jpg"  # Reference PAN card

# Run the processing function
process_pan_folder(test_folder, reference_image_path)